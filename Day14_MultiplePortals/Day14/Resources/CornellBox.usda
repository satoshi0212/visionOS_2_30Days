#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["", "", "CornellBoxGeometry", "Materials"]
    def "CornellBoxGeometry" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (-1.5707963, 2.3840745e-7, -2.3611679e-7)
        }
        references = @CornellBoxGeometry.usdc@
    )
    {
        rel material:binding = </Root/Materials/Cube> (
            bindMaterialAs = "weakerThanDescendants"
        )
        quatf xformOp:orient = (0.70710677, -0.7071067, 1.6776964e-7, 8.0988133e-10)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "teapot" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, 2.5691361, 0)
            }
        )
        {
            rel material:binding = </Root/Materials/Teapot> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float3 xformOp:translate = (0.5613912, 1.1342895, 0)

            over "Teapot" (
                customData = {
                    float3 rotationEulerHint = (0, 2.5691361, 0)
                }
            )
            {
                over "Teapot" (
                    customData = {
                        float3 rotationEulerHint = (0, 2.5691361, 0)
                    }
                )
                {
                    rel material:binding = None (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }
        }

        over "Cube_001" (
            customData = {
                float3 rotationEulerHint = (-1.5707961, -0.62603587, -3.3099118e-7)
            }
        )
        {
            over "Cube_002" (
                customData = {
                    float3 rotationEulerHint = (-1.5707961, -0.62603587, -3.3099118e-7)
                }
            )
            {
                rel material:binding = None (
                    bindMaterialAs = "weakerThanDescendants"
                )
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        over "_materials" (
            active = false
        )
        {
            over "pxrusdpreviewsurface1sg"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }
        }
    }

    def Scope "Materials" (
        active = true
    )
    {
        reorder nameChildren = ["", "", "Teapot", "Cube"]
        def Material "Teapot" (
            active = true
        )
        {
            token outputs:mtlx:surface.connect = </Root/Materials/Teapot/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (580.77075, 39.684235)
            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 89)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 69

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/Materials/Teapot/Multiply.outputs:out>
                color3f inputs:baseColor = (0, 0, 0) (
                    colorSpace = "Input - Texture - sRGB - Display P3"
                )
                color3f inputs:baseColor.connect = </Root/Materials/Teapot/image_3.outputs:out>
                float inputs:clearcoat
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/Materials/Teapot/Multiply_1.outputs:out>
                float inputs:metallic.connect = </Root/Materials/Teapot/image_2.outputs:out>
                float3 inputs:normal.connect = </Root/Materials/Teapot/Subtract.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/Materials/Teapot/image_4.outputs:out>
                float inputs:specular = 0.5
                token outputs:out
                float2 ui:nodegraph:node:pos = (338.04037, 68.768906)
                float2 ui:nodegraph:node:size = (167, 297)
                int ui:nodegraph:node:stackingOrder = 155
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:emissiveColor"]
            }

            def Shader "image"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @TeapotLightmap.heic@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-573.0361, -221.88043)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 94
            }

            def Shader "image_1"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @teapot_lightmap_ao.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-935.525, 176.2898)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 152
            }

            def Shader "image_2"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @teapot/0/teapot_m.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-716.8457, 70.31641)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 121
            }

            def Shader "image_3"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @teapot/0/teapot_bc.png@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-941.56866, -181.89417)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 153
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "image_4"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @teapot/0/teapot_r.png@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-204.28911, -14.477402)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 125
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/Materials/Teapot/image_1.outputs:out>
                float inputs:in2 = 1
                float outputs:out
                float2 ui:nodegraph:node:pos = (-50.203213, 192.44061)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 157
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_color3FA"
                prepend color3f inputs:in1.connect = </Root/Materials/Teapot/image.outputs:out>
                float inputs:in2 = 0.5
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (12.118925, -107.37389)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "image_5"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @teapot/0/teapot_n.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-459.70786, 349.7761)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 139
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_vector3FA"
                prepend float3 inputs:in1.connect = </Root/Materials/Teapot/image_5.outputs:out>
                float inputs:in2 = 2
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-140.55635, 283.7762)
                float2 ui:nodegraph:node:size = (60, 36)
                int ui:nodegraph:node:stackingOrder = 140
            }

            def Shader "Subtract"
            {
                uniform token info:id = "ND_subtract_vector3"
                float3 inputs:in1.connect = </Root/Materials/Teapot/Multiply_2.outputs:out>
                float3 inputs:in2 = (1, 1, 1)
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (6.30734, 307.58722)
                float2 ui:nodegraph:node:size = (61.5, 36)
                int ui:nodegraph:node:stackingOrder = 144
            }
        }

        def Material "Cube" (
            active = true
        )
        {
            prepend token outputs:mtlx:surface.connect = </Root/Materials/Cube/MaterialXPreviewSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (358.25, 94.5)
            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 89)

            def Shader "MaterialXPreviewSurface" (
                active = true
            )
            {
                uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                float inputs:clearcoat
                float inputs:clearcoatRoughness
                color3f inputs:diffuseColor = (0, 0, 0) (
                    colorSpace = "Input - Texture - sRGB - Display P3"
                )
                color3f inputs:diffuseColor.connect = None
                color3f inputs:emissiveColor.connect = </Root/Materials/Cube/image.outputs:out>
                float inputs:ior
                float inputs:metallic
                float inputs:occlusion = 0
                float inputs:roughness = 1
                token outputs:out
                float2 ui:nodegraph:node:pos = (15.074219, 29.976562)
                float2 ui:nodegraph:node:size = (207.5, 297)
                int ui:nodegraph:node:stackingOrder = 9
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced"]
            }

            def Shader "image"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @CubeLightmap.heic@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-389.5625, 43.41797)
                float2 ui:nodegraph:node:size = (148.5, 189)
                int ui:nodegraph:node:stackingOrder = 4
            }
        }
    }
}

